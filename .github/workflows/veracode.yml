name: Veracode Static Analysis Pipeline Scan

on:
  push:

permissions:
  contents: read

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        repository: ''
        
    - name: Build with Maven
      working-directory: ./app/
      run: mvn -B package --file pom.xml
    - uses: actions/upload-artifact@v1
      with:
        name: my-artifact
        path: app/target/verademo.war
    
  policy-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: veracode/veracode-uploadandscan-action@0.2.1
      with:
          appname: 'GitHub_cax'
          createprofile: true
          filepath: 'app/target/verademo.war'
          vid: '${{secrets.VERACODE_API_ID}}'
          vkey: '${{secrets.VERACODE_API_KEY}}'
#          createsandbox: 'true'
#          sandboxname: 'SANDBOXNAME'
#          scantimeout: 0
#          exclude: '*.js'
#          include: '*.war'
#          criticality: 'VeryHigh'
      continue-on-error: true

  pipeline-scan:
    needs: build
    runs-on: ubuntu-latest
    container: 
      image: veracode/pipeline-scan:latest
      options: --user root
    steps:
      - name: get archive
        uses: actions/download-artifact@v2
        with:
          name: app/target/verademo.war
          path: /tmp
      - name: pipeline-scan
        run: | 
          java -jar /opt/veracode/pipeline-scan.jar \
            -vid "${{secrets.VERACODE_API_ID}}" \
            -vkey "${{secrets.VERACODE_API_KEY}}" \
            --fail_on_severity="Very High, High" \
            --file app/target/verademo.war \
            -jf results.json \
            -fjf filtered_results.json 
        continue-on-error: true

#    - run: curl --silent --show-error --fail -O https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
 #   - run: unzip -o pipeline-scan-LATEST.zip

  #  - uses: actions/setup-java@v1
   #   with:
    #    java-version: 1.8
    #- run: java -jar pipeline-scan.jar --veracode_api_id "${{secrets.VERACODE_API_ID}}" --veracode_api_key "${{secrets.VERACODE_API_KEY}}" --fail_on_severity="Very High, High" --file app/target/verademo.war
     # continue-on-error: true
#    - uses: actions/upload-artifact@v1
 #     with:
  #      name: ScanResults
    #    path: results.json
#    - name: Convert pipeline scan output to SARIF format
 #     id: convert
  #    uses: veracode/veracode-pipeline-scan-results-to-sarif@master
   #   with:
    #    source-base-path-1: "^com/veracode:app/src/main/java/com/veracode"
     #   source-base-path-2: "^WEB-INF:app/src/main/webapp/WEB-INF"
      #  pipeline-results-json: results.json

      - name: save standard results
        uses: actions/upload-artifact@v1
        with:
          name: PipelineScanResults
          path: results.json
      - name: save filtered results
        uses: actions/upload-artifact@v1
        with:
          name: filtered-results
          path: filtered_results.json

  import-findings-to-code-scanning-alerts:
    needs: pipeline-scan
    runs-on: ubuntu-latest
    steps:  
      - name: get scan results
        uses: actions/download-artifact@v2
        with:
          name: PipelineScanResults
      - name: Convert pipeline scan output to SARIF format 
        id: convert
        uses: veracode/veracode-pipeline-scan-results-to-sarif@v0.1.5
        with:
          pipeline-results-json: results.json
          source-base-path-1: "^com/veracode:src/main/java/com/veracode"
          source-base-path-2: "^WEB-INF:src/main/webapp/WEB-INF"
      - uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: veracode-results.sarif


  # Create issues from piepline scan
  import-issues:
    needs: pipeline-scan
    runs-on: ubuntu-latest
    steps:
      - name: get scan results
        uses: actions/download-artifact@v2
        with:
          name: filtered-results

      - name: import flaws as issues
        uses: buzzcode/veracode-flaws-to-issues@v1
        with:
          scan-results-json: 'filtered_results.json'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          source_base_path_1: "com/veracode:src/main/java/com/veracode" 
          source_base_path_2: "WEB-INF:src/main/webapp/WEB-INF"
          commit-hash: ${{ GITHUB.SHA }}



      - name: SCA Scan
        env: 
          SRCCLR_API_TOKEN: ${{secrets.SRCCLR_API_TOKEN}}
        run: curl -sSL https://download.sourceclear.com/ci.sh | sh -s scan .
